@model ViewProdutoFavoritos


@{
    @* PARA ADICIONAR O LAYOUT 2 (FUNC)  *@
    Layout = "_LayoutFunc"; // Isso ativa o layout do funcionário e não o padrão
    ViewData["Title"] = "Detalhes Produto Funcionário";
}


<div class="container row justify-content-center">
    <div class="col-6">
        <div class="base-prod-detalhe d-flex">
            <div class="scrollable-div col-3 overflow-auto">
                @if (Model?.produto != null && Model.produto.imgs != null && Model.produto.imgs.Any())
                {
                    <img src="@Url.Content(Model.produto.imgs.First().enderecoImg)" class="imgprincipal" />
                }
                else
                {
                    <p>Sem imagens disponíveis.</p>
                }

            </div>

            <div class="imgprincipal-container">
                <img src="@Url.Content(@Model.produto.imgs.First().enderecoImg)" class="imgprincipal" />
            </div>
        </div>

        <div class="base-prod-detalhe position-relative">
            <h3>Descrição do produto</h3>
            <p class="texto-simples">
                @Model.produto.descricao
            </p>
            <div id="versaocompleta" class="hidden">
                <p class="texto-simples">Características do Produto:</p>
                <br />
                <p class="texto-simple">
                    @Model.produto.descricao;
                    <ul class="texto-simples">
                        <li><strong>Categoria: </strong>@Model.produto.categoria.nomeCategoria</li>
                        <li><strong>Classificação Indicativa: </strong>@Model.produto.classificacao.nomeClassificacao</li>

                        @{
                            int colorIndex = 0;
                            var colors = new List<string> { "azul", "vermelho", "amarelo" };
                        }

                        <li>
                            @foreach (var habilidade in Model.produto.habilidades)
                            {
                                <span style="color: @colors[colorIndex]; display: inline-block; margin-right: 10px;">
                                    #@habilidade.nomeHabilidade
                                </span>
                                colorIndex = (colorIndex + 1) % colors.Count; // alterna entre as cores
                            }
                        </li>
                    </ul>
            </div>
            <div class="fundo_ver position-absolute bottom-0 end-0">
                <button class="vermais position-absolute bottom-0 end-0" id="toggle-button">Ler descrição completa</button>
            </div>


        </div>
        <div class="base-prod-detalhe  texto-simples">
            <h3>Avaliações do produto</h3>
            <div class="row">

                <div class="col-5 ">
                    <div class="rating-score ">
                        <div class="d-flex">

                            @if (Model.produto.avaliacoes != null && Model.produto.avaliacoes.Any())
                            {

                                // Calcula a média arredondada para o múltiplo de 0.5 mais próximo
                                decimal media = Math.Round((decimal)Model.produto.somaAvaliacao / Model.produto.qtdAvaliacao * 2, MidpointRounding.AwayFromZero) / 2;

                                int estrelasCheias = (int)media; // Parte inteira da média
                                bool meiaEstrela = media - estrelasCheias == 0.5m; // Verifica se tem meia estrela
                                int estrelasVazias = 5 - estrelasCheias - (meiaEstrela ? 1 : 0); // Calcula quantas vazias faltam


                                <h4 style="font-size:50px; margin-bottom:0; margin-inline:5px;">@((Model.produto.somaAvaliacao / Model.produto.qtdAvaliacao).ToString("F1").Replace(",", "."))</h4>
                                <div class="align-content-center">
                                    @for (int i = 0; i < estrelasCheias; i++)
                                    {
                                        // Exibe as estrelas cheias
                                        <img src="~/imgs/Star.png" class="iconeava" />
                                    }


                                    @if (meiaEstrela)
                                    {
                                        // Exibe meia estrela, se necessário
                                        <img src="~/imgs/halfStar.png" class="iconeava" />
                                    }


                                    @for (int i = 0; i < estrelasVazias; i++)
                                    {
                                        // Exibe as estrelas vazias
                                        <img src="~/imgs/estrelaVazia.png" class="iconeava" />
                                    }
                                    @((Model.produto.somaAvaliacao / Model.produto.qtdAvaliacao).ToString("F1").Replace(",", ".")) (@Model.produto.qtdAvaliacao avaliações)
                                </div>
                            }
                            else
                            {
                                <h4 style="font-size:50px; margin-bottom:0; margin-inline:5px;">0.0</h4>
                                <div>
                                    <img src="~/imgs/estrelaVazia.png" class="icone">
                                    <img src="~/imgs/estrelaVazia.png" class="icone">
                                    <img src="~/imgs/estrelaVazia.png" class="icone">
                                    <img src="~/imgs/estrelaVazia.png" class="icone">
                                    <img src="~/imgs/estrelaVazia.png" class="icone">
                                </div>
                            }
                        </div>

                        <div class="rating-row">
                            <div class="d-flex"><img src="~/imgs/starline.png" class="iconeava"> <span>5</span></div>
                            <div class="progress-bar">
                                <div class="progress" id="bar-5"></div>
                            </div>
                        </div>
                        <div class="rating-row">
                            <div class="d-flex"><img src="~/imgs/starline.png" class="iconeava"> <span>4</span></div>
                            <div class="progress-bar">
                                <div class="progress" id="bar-4"></div>
                            </div>
                        </div>
                        <div class="rating-row">
                            <div class="d-flex"><img src="~/imgs/starline.png" class="iconeava"> <span>3</span></div>
                            <div class="progress-bar">
                                <div class="progress" id="bar-3"></div>
                            </div>
                        </div>
                        <div class="rating-row">
                            <div class="d-flex"><img src="~/imgs/starline.png" class="iconeava"> <span>2</span></div>
                            <div class="progress-bar">
                                <div class="progress" id="bar-2"></div>
                            </div>
                        </div>
                        <div class="rating-row">
                            <div class="d-flex"><img src="~/imgs/starline.png" class="iconeava"> <span>1</span></div>
                            <div class="progress-bar">
                                <div class="progress" id="bar-1"></div>
                            </div>
                        </div>

                        <div class="total-ratings">
                            <hr />
                            <p class="texto-simples"><span id="total-ratings">@Model.produto.qtdAvaliacao</span> avaliações realizadas</p>
                        </div>

                    </div>

                </div>

                <!-- parte dos comentários-->
                <div class="col-7 border-start">
                    @if (Model.produto.avaliacoes != null && Model.produto.avaliacoes.Any())
                    {
                        foreach (var avaliacao in Model.produto.avaliacoes)
                        {
                            <div class="review">
                                <div class="d-flex">
                                    <div class="review-header">
                                        <strong>Usuário @(avaliacao.cliente.nome)</strong>
                                    </div>
                                    <div class="d-flex">
                                        @for (int i = 0; i < avaliacao.qtdEstrela; i++)
                                        {
                                            <img src="~/imgs/Star.png" class="iconeava" />
                                        }
                                        @for (int i = avaliacao.qtdEstrela; i < 5; i++)
                                        {
                                            <img src="~/imgs/estrelaVazia.png" class="iconeava" />
                                        }
                                    </div>
                                </div>
                                <div class="review-content">@avaliacao.comentario</div>
                            </div>
                            <hr />
                        }
                    }
                    else
                    {
                        <p>Não há avaliações para este produto ainda.</p>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- CARDS AO LADO-->
    <div class="col-4">
        <div class="base-prod-detalhe">
            <div class="d-flex pb-2 px-1 justify-content-between">
                <h5 class="glacial-bold titulo-detalhe">@Model.produto.nomeProd</h5>
            </div>

            @if (Model.produto.avaliacoes != null && Model.produto.avaliacoes.Any())
            {

                // Calcula a média arredondada para o múltiplo de 0.5 mais próximo
                decimal media = Math.Round((decimal)Model.produto.somaAvaliacao / Model.produto.qtdAvaliacao * 2, MidpointRounding.AwayFromZero) / 2;

                int estrelasCheias = (int)media; // Parte inteira da média
                bool meiaEstrela = media - estrelasCheias == 0.5m; // Verifica se tem meia estrela
                int estrelasVazias = 5 - estrelasCheias - (meiaEstrela ? 1 : 0); // Calcula quantas vazias faltam

                <p class=" mb-1 texto-simples">


                    @for (int i = 0; i < estrelasCheias; i++)
                    {
                        // Exibe as estrelas cheias
                        <img src="~/imgs/Star.png" class="iconeava" />
                    }


                    @if (meiaEstrela)
                    {
                        // Exibe meia estrela, se necessário
                        <img src="~/imgs/halfStar.png" class="iconeava" />
                    }


                    @for (int i = 0; i < estrelasVazias; i++)
                    {
                        // Exibe as estrelas vazias
                        <img src="~/imgs/estrelaVazia.png" class="iconeava" />
                    }
                    @((Model.produto.somaAvaliacao / Model.produto.qtdAvaliacao).ToString("F1").Replace(",", ".")) (@Model.produto.qtdAvaliacao avaliações)
                </p>
            }
            else
            {
                <p class=" mb-1 texto-simples">
                    <img src="~/imgs/estrelaVazia.png" class="iconeava" />
                    <img src="~/imgs/estrelaVazia.png" class="iconeava" />
                    <img src="~/imgs/estrelaVazia.png" class="iconeava" />
                    <img src="~/imgs/estrelaVazia.png" class="iconeava" />
                    <img src="~/imgs/estrelaVazia.png" class="iconeava" />


                    (0 avaliações)
                </p>
            }

            <div class="mb-2 px-2">
                <h4>R$ @Model.produto.valorUnit</h4>
            </div>

            <div class="d-flex mb-3 px-2">

                @if (Model.produto.estoque > 0)
                {
                    <h6 class="glacial-bold" style="color:#8ED61A;">Em estoque </h6>
                }
                else
                {
                    <h6 class="glacial-bold" style="color:red;"> Esgotado</h6>
                }

                <div class="qtdProd"><p>@Model.produto.estoque</p> </div>
            </div>
            <div class="row justify-content-center px-2 m-1">
                <a asp-controller="Home" asp-action="AlterarProdutosF" class="btnAlt">ALTERAR</a>
                @if (Model.produto.statusProd == false) // Se o produto está ativo
                {
                    <form asp-controller="Funcionario" asp-action="AtualizarStatusProduto" method="post">
                        <input type="hidden" name="codProd" value="@Model.produto.codProd" />
                        <input type="hidden" name="statusProd" value="1" />
                        <button type="submit" class="btn ativar-btn">Ativar</button>
                    </form>
                }
                else // Se o produto está inativo
                {
                    <form asp-controller="Funcionario" asp-action="AtualizarStatusProduto" method="post">
                        <input type="hidden" name="codProd" value="@Model.produto.codProd" />
                        <input type="hidden" name="statusProd" value="0" />
                        <button type="submit" class="btn desativar-btn">Desativar</button>
                    </form>

                }
            </div>
        </div>
    </div>
    }
</div>



<script>
    function valorEstrela(valor, estrelaId) {
        const qtdEstrela = document.querySelector('#qtdEstrela');
        const s1 = document.querySelector('#star1');
        const s2 = document.querySelector('#star2');
        const s3 = document.querySelector('#star3');
        const s4 = document.querySelector('#star4');
        const s5 = document.querySelector('#star5');

        qtdEstrela.value = valor;


        if (valor == 5) {
            s1.src = '@Url.Content("~/imgs/Star.png")';
            s2.src = '@Url.Content("~/imgs/Star.png")';
            s3.src = '@Url.Content("~/imgs/Star.png")';
            s4.src = '@Url.Content("~/imgs/Star.png")';
            s5.src = '@Url.Content("~/imgs/Star.png")';
        }

        else if (valor == 4) {
            s1.src = '@Url.Content("~/imgs/Star.png")';
            s2.src = '@Url.Content("~/imgs/Star.png")';
            s3.src = '@Url.Content("~/imgs/Star.png")';
            s4.src = '@Url.Content("~/imgs/Star.png")';
            s5.src = '@Url.Content("~/imgs/estrelaVazia.png")';
        }

        else if (valor == 3) {
            s1.src = '@Url.Content("~/imgs/Star.png")';
            s2.src = '@Url.Content("~/imgs/Star.png")';
            s3.src = '@Url.Content("~/imgs/Star.png")';
            s4.src = '@Url.Content("~/imgs/estrelaVazia.png")';
            s5.src = '@Url.Content("~/imgs/estrelaVazia.png")';
        }

        else if (valor == 2) {
            s1.src = '@Url.Content("~/imgs/Star.png")';
            s2.src = '@Url.Content("~/imgs/Star.png")';
            s3.src = '@Url.Content("~/imgs/estrelaVazia.png")';
            s4.src = '@Url.Content("~/imgs/estrelaVazia.png")';
            s5.src = '@Url.Content("~/imgs/estrelaVazia.png")';
        }

        else if (valor == 1) {
            s1.src = '@Url.Content("~/imgs/Star.png")';
            s2.src = '@Url.Content("~/imgs/estrelaVazia.png")';
            s3.src = '@Url.Content("~/imgs/estrelaVazia.png")';
            s4.src = '@Url.Content("~/imgs/estrelaVazia.png")';
            s5.src = '@Url.Content("~/imgs/estrelaVazia.png")';
        }
    }


    // Quantidade de avaliações
    const totalRatings = @Model.produto.qtdAvaliacao;
    const ratingsData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.produto.dadosAvaliacoes).Replace("\"", "").Replace(":", ": "))


    for (let rating in ratingsData) {
        const percentage = (ratingsData[rating] / totalRatings) * 100;
        const ratingBar = document.getElementById(`bar-${rating}`);

        if (ratingBar) {
            ratingBar.style.width = `${percentage}%`;
        } else {
            console.error(`Barra de progresso para ${rating} estrelas não encontrada.`);
        }
    }
</script>