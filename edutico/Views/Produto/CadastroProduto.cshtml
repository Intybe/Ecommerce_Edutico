@{
    // Ativa o layout específico para funcionários, em vez do layout padrão
    Layout = "_LayoutFunc";
    ViewData["Title"] = "Cadastrar Produtos"; // Define o título da página
}

<section class="Conteudo texto-simples">
    <!-- Seção de cadastro de produtos -->
    <section class="Cadastrar Produtos">
        <!-- Cabeçalho da seção -->
        <div class="header">
            <h1>CADASTRAR PRODUTOS</h1>
        </div>
        <hr />
        <form asp-controller="Produto" asp-action="CadastrarProduto" method="post" enctype="multipart/form-data">
            <!-- Mensagem -->
            @{
                if (ViewData["msg"] != null)
                {
                    @* O HTML Raw pode ser usado para: Procurar e baixar páginas HTML, Procurar e baixar cabeçalhos.*@
                    <p class="alert alert-danger">@Html.Raw(ViewData["msg"])</p>
                }
            }
            <div class="row d-flex justify-content-between">
                <!-- Primeiro form-group -->
                <div class="form-group col-lg-6">
                    <!-- Conteúdo do lado esquerdo aqui -->
                    <label for="NomeProd">Nome <span class="req">*</span></label>
                    <input type="text" id="InputType1" class="InputType1" placeholder="Digite aqui o nome do produto" name="nomeProd" />

                    <label for="CodProd">Código Produto <span class="req">*</span></label>
                    <input type="text" id="InputType1" class="InputType1" placeholder="Digite aqui o código do produto" name="codProd" />

                    <label for="DescProd">Descrição <span class="req">*</span></label>
                    <textarea id="CxDesc" class="CxDesc" placeholder="Digite aqui a descrição do produto" name="descricaoProd"></textarea>

                    <!-- Classificação Indicativa e Valor Unitário -->
                    <div class="row">
                        <div class="col-lg-7">
                            <label for="ClassIndProd">Classificação Indicativa <span class="req">*</span></label>
                            <select class="ClassIndProd" name="classificacao">
                                <option value="Até 2 Anos">Até 2 Anos</option>
                                <option value="3+ Anos">3+ Anos</option>
                                <option value="6+ Anos">6+ Anos</option>
                                <option value="10+ Anos">10+ Anos</option>
                                <option value="12+ Anos">12+ Anos</option>
                            </select>
                        </div>
                        <div class="col-lg-5">
                            <label for="ValorUni">Valor Unitário <span class="req">*</span></label>
                            <input type="text" id="ValorUni" class="InputType1" placeholder="Digite o valor" name="valorUnit"/>
                        </div>
                    </div>

                    <label for="CatBrinquedo" placeholder="Selecione a categoria do brinquedo">Categoria de brinquedos <span class="req">*</span></label>
                    <select class="CatBrinquedo" name="categoria">
                        <option value="Brinquedos de Montar">Brinquedos de Montar</option>
                        <option value="Brinquedos Sustentáveis">Brinquedos Sustentáveis</option>
                        <option value="Brinquedos Científicos">Brinquedos Científicos</option>
                        <option value="Quebra-Cabeças">Quebra-Cabeças</option>
                        <option value="Livros Interativos">Livros Interativos</option>
                        <option value="Brinquedos Sensoriais">Brinquedos Sensoriais</option>
                        <option value="Instrumentos Musicais">Instrumentos Musicais</option>
                        <option value="Jogos de Tabuleiro">Jogos de Tabuleiro</option>
                        <option value="Jogos de Desafio">Jogos de Desafio</option>
                        <option value="Jogos de Ação">Jogos de Ação</option>
                        <option value="Jogos de Cartas">Jogos de Cartas</option>
                        <option value="Jogos Eletrônicos">Jogos Eletrônicos</option>
                    </select>

                    <div class="row">
                        <div class="col-lg-7">
                            <label for="Estoque">Estoque<span class="req">*</span></label>
                            <input type="text" id="Estoque" class="InputType1" placeholder="Quantidade em estoque" name="estoque"/>
                        </div>
                        <div class="col-lg-5 mb-3">
                            <label for="Lancamento" class="form-label">Lançamento <span class="req">*</span></label>
                            <div class="d-flex">
                                <div class="form-check me-3">
                                    <input type="radio" id="LancamentoSim" name="lacamentoProd" value="true" class="form-check-input">
                                    <label for="LancamentoSim" class="form-check-label">Sim</label>
                                </div>
                                <div class="form-check">
                                    <input type="radio" id="LancamentoNao" name="lacamentoProd" value="false" class="form-check-input">
                                    <label for="LancamentoNao" class="form-check-label">Não</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Segundo form-group2 -->
                <div class="form-group2 col-lg-6">
                    <!-- Conteúdo do lado direito aqui -->
                    <label for="HabTabalhada">Habilidade Trabalhada <span class="req">*</span></label>
                    <div id="HabTabalhada" class="chips-container">
                        <span class="chip" onclick="selecionarHabilidade(this)">Criatividade</span>
                        <span class="chip" onclick="selecionarHabilidade(this)">Coordenação motora</span>
                        <span class="chip" onclick="selecionarHabilidade(this)">Concentração</span>
                        <span class="chip" onclick="selecionarHabilidade(this)">Educação Emocional</span>
                        <span class="chip" onclick="selecionarHabilidade(this)">Linguagem e comunicação</span>
                        <span class="chip" onclick="selecionarHabilidade(this)">Matemática</span>
                        <span class="chip" onclick="selecionarHabilidade(this)">Raciocínio lógico</span>
                        <span class="chip" onclick="selecionarHabilidade(this)">Socialização</span>
                        <span class="chip" onclick="selecionarHabilidade(this)">Resolução de problemas</span>
                        <span class="chip" onclick="selecionarHabilidade(this)">Pensamento crítico</span>
                    </div>
                    <!-- Um campo escondido para armazenar os chips selecionados -->
                    <input type="hidden" id="habilidadesSelecionadas" name="habilidadesEnviadas" />

                    <!-- Upload de imagem -->
                   <div class="conteudo_imagens">
                        <label for="ImgProduto">Selecione as imagens<span class="req">*</span></label>
                        <div class="organizacao_imagens" id="grid_imgs">
                            <label for="thumbnailInput" class="add-thumbnail">
                              
                               <img src="~/imgs/Plus.png" style="border: none; width: 50px; height: auto;" />
                                
                            </label>
                            <input type="file" id="thumbnailInput" name="imgs" accept="image/*" multiple onchange="addMiniatura(event)" multiple>
                        </div>
                    </div>
                   
                </div>
            </div>

            <!-- Botões de ação -->
            <div class="btns">
                <button class="btnCancelar btn-primary">Cancelar</button>
                <button class="btnCadastrar btn-primary">Cadastrar</button>
            </div>
        </form>
    </section>
</section>

<script>
    function selecionarHabilidade(element) {
        // Alterna a classe "selected" para o chip
        element.classList.toggle('selected');

        // Atualiza o campo hidden com as habilidades selecionadas
        const chipsSelecionados = document.querySelectorAll('.chip.selected');
        const habilidadesSelecionadas = Array.from(chipsSelecionados).map(chip => chip.innerText);

        // Armazena as habilidades selecionadas no input hidden
        document.getElementById('habilidadesSelecionadas').value = habilidadesSelecionadas.join(', ');
    }

    function addMiniatura(event) {
        // Pega o primeiro arquivo que o usuário escolheu (no caso, a imagem)
        const file = event.target.files[0];

        // Verifica se o arquivo existe
        if (file) {
            // Cria um leitor de arquivos para ler o conteúdo da imagem
            const reader = new FileReader();

            // Quando o leitor terminar de carregar a imagem, esta função será executada
            reader.onload = function (e) {
                // Pega o elemento no HTML onde as miniaturas serão exibidas
                const grid_imgs = document.getElementById("grid_imgs");

                // Cria um contêiner para a miniatura (um <div> que vai envolver a miniatura)
                const thumbnailContainer = document.createElement("div");
                thumbnailContainer.classList.add("miniaturas");  // Corrigido para usar thumbnailContainer

                // Cria um elemento <img> para exibir a miniatura
                const imgElement = document.createElement("img");
                imgElement.src = e.target.result;  // Define a imagem carregada como a fonte da tag <img>

                // Cria um botão para remover a miniatura
                const removeButton = document.createElement("button");
                removeButton.innerHTML = '<img src="/imgs/xx.png" id="remove-miniatura" style="width:30px; height:30px;">';  // Define o texto do botão como "x" (para remover)


                // Define a ação do botão: remover a miniatura quando o botão for clicado
                removeButton.onclick = function () {
                    thumbnailContainer.remove();  // Remove o contêiner da miniatura correta
                };

                // Adiciona a imagem e o botão de remover ao contêiner da miniatura
                thumbnailContainer.appendChild(imgElement);
                thumbnailContainer.appendChild(removeButton);

                // Adiciona o contêiner da miniatura antes do último item da galeria (um ícone "+")
                grid_imgs.insertBefore(thumbnailContainer, grid_imgs.lastElementChild);
            };

            // Lê o arquivo da imagem como uma URL (para exibição)
            reader.readAsDataURL(file);
        }
    } 
       

</script>